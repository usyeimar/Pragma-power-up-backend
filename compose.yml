version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "${SERVER_PORT_API_GATEWAY}:${SERVER_PORT_API_GATEWAY}"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SERVER_PORT: ${SERVER_PORT_API_GATEWAY}
    depends_on:
      service-discovery:
        condition: service_started
      service-user:
        condition: service_started
      service-home:
        condition: service_started
      service-visits:
        condition: service_started
      service-transactions:
        condition: service_started
    networks:
      - microservices-net

  service-discovery:
    build:
      context: ./service-discovery
    container_name: service-discovery
    ports:
      - "${SERVICE_DISCOVERY_PORT}:${SERVICE_DISCOVERY_PORT}"
    environment:
      SERVER_PORT: ${SERVICE_DISCOVERY_PORT}
    networks:
      - microservices-net

  postgres-db:
    image: pgvector/pgvector:pg17
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}"
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:9.3
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - microservices-net
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: unless-stopped

  service-user:
    build:
      context: ./service-user
    container_name: service-user
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_USER_SERVICE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_USER}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_EXPIRATION_MS: ${APP_JWT_EXPIRATION_MS}
      APP_JWT_ISSUER_URI: ${APP_JWT_ISSUER_URI}
      DEFAULT_USER_EMAIL: ${DEFAULT_USER_EMAIL}
      DEFAULT_USER_PASSWORD: ${DEFAULT_USER_PASSWORD}
      DEFAULT_USER_FIRSTNAME: ${DEFAULT_USER_FIRSTNAME}
      DEFAULT_USER_LASTNAME: ${DEFAULT_USER_LASTNAME}
      DEFAULT_USER_DOCUMENTID: ${DEFAULT_USER_DOCUMENTID}
      DEFAULT_USER_PHONENUMBER: ${DEFAULT_USER_PHONENUMBER}
    depends_on:
      service-discovery:
        condition: service_started
      postgres-db:
        condition: service_healthy
    networks:
      - microservices-net

  service-home:
    build:
      context: ./service-home
    container_name: service-home
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_HOME_SERVICE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_HOME}
    depends_on:
      service-discovery:
        condition: service_started
      postgres-db:
        condition: service_healthy
    networks:
      - microservices-net
    volumes:
      - ./uploads:/app/uploads

  service-visits:
    build:
      context: ./service-visits
    container_name: service-visits
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_VISITS_SERVICE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_VISITS}
    depends_on:
      service-discovery:
        condition: service_started
      postgres-db:
        condition: service_healthy
    networks:
      - microservices-net

  service-transactions:
    build:
      context: ./service-transactions
    container_name: service-transactions
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_TRANSACTIONS_SERVICE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_TRANSACTIONS}
    depends_on:
      service-discovery:
        condition: service_started
      postgres-db:
        condition: service_healthy
    networks:
      - microservices-net

volumes:
  postgres-db-data:
  pgadmin-data:

networks:
  microservices-net:
    driver: bridge
